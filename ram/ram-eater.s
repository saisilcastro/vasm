IER = $600E				; interrupt Enable register
IFR = $600D				; interrupt Flag Register
PCR = $6001				; peripheral control register
DDRA = $6003			; data direction bus A
DDRB = $6002			; data direction bus B
PORTA = $6001
PORTB = $6000

kb_wptr = $0000
kb_rptr = $0001
kb_flag = $0002
kb_buffer = $0200

RELEASE = %00000001
SHIFT	= %00000010

    .ORG $8000
setup:
	LDX #$FF
    TXS

	LDA #$01			; select CA1 as rising edge
	STA PCR

	LDA #$82			; enable CA1
	STA IER
	CLI

    LDA #%11111111
    STA DDRB           ; Set PORTB as output
    LDA #%00000000
    STA DDRA           ; Set PORTA for control signals

	JSR lcd_init_4bits

	LDA #$00
	STA kb_flag
	STA kb_wptr
	STA kb_rptr
loop:
	SEI
	LDA kb_rptr
	CMP kb_wptr
	CLI
	BNE key_pressed
    JMP loop           ; Infinite loop to prevent exit

key_pressed:
	LDX kb_rptr
	LDA kb_buffer, X
	CMP #$0A
	BEQ enter_pressed
	JSR lcd_byte
	INC kb_rptr
	JMP loop

enter_pressed:
	LDA #%10101000
	JSR lcd_instruction
	INC kb_rptr
	JMP loop

esc_pressed:
	LDA #%00000001
	JSR lcd_instruction
	INC kb_rptr
	JMP loop

keyboard_interrupt:
	PHA
	TXA
	PHA
	LDA kb_flag
	AND #RELEASE
	BEQ read_key

	LDA kb_flag
	EOR #RELEASE
	STA kb_flag
	LDA PORTA
	CMP #$12
	BEQ shift_up
	CMP #$59
	BEQ shift_up
	JMP exit

shift_up:
	LDA kb_flag
	EOR #SHIFT
	STA kb_flag
	JMP exit

read_key:
	LDA PORTA
	CMP #$F0
	BEQ key_release
	CMP #$12
	BEQ shift_down
	CMP #$59
	BEQ shift_down

	TAX
	LDA kb_flag
	AND #SHIFT
	BNE shifted_key

	LDA keymap, X
	JMP push_key

shifted_key:
	LDA keymap_shifted, X

push_key:
	LDX kb_wptr
	LDA kb_buffer, X
	INC kb_wptr
	JMP exit

shift_down:
	LDA kb_flag
	ORA #SHIFT
	STA kb_flag
	JMP exit

key_release:
	LDA kb_flag
	ORA #RELEASE
	STA kb_flag
exit:
	PLA
	TAX
	PLA
	RTI
nmi:
	RTI

	.ORG $FD00
keymap:
	.byte "????????????? `?" ; 00-0F
	.byte "?????q1???zsaw2?" ; 10-1F
	.byte "?cxde43?? vftr5?" ; 20-2F
	.byte "?nbhgy6???mju78?" ; 30-3F
	.byte "?,kio09??./l;p-?" ; 40-4F
	.byte "??'?[=?????]?\??" ; 50-5F
	.byte "?????????1?47???" ; 60-6F
	.byte "0.2568???+3-*9??" ; 70-7F
	.byte "????????????????" ; 80-8F
	.byte "????????????????" ; 90-9F
	.byte "????????????????" ; A0-AF
	.byte "????????????????" ; B0-BF
	.byte "????????????????" ; C0-CF
	.byte "????????????????" ; D0-DF
	.byte "????????????????" ; E0-EF
	.byte "????????????????" ; F0-FF
keymap_shifted:
	.byte "????????????? ~?" ; 00-0F
	.byte "?????Q!???ZSAW@?" ; 10-1F
	.byte "?CXDE#$?? VFTR%?" ; 20-2F
	.byte "?NBHGY^???MJU&*?" ; 30-3F
	.byte "?<KIO)(??>?L:P_?" ; 40-4F
	.byte '??"?{+?????}?|??' ; 50-5F
	.byte "?????????1?47???" ; 60-6F
	.byte "0.2568???+3-*9??" ; 70-7F
	.byte "????????????????" ; 80-8F
	.byte "????????????????" ; 90-9F
	.byte "????????????????" ; A0-AF
	.byte "????????????????" ; B0-BF
	.byte "????????????????" ; C0-CF
	.byte "????????????????" ; D0-DF
	.byte "????????????????" ; E0-EF
	.byte "????????????????" ; F0-FF

	.include "lcd-4bits.s"
	.ORG $FFFA
	.WORD nmi
    .WORD setup        ; Reset vector
    .WORD keyboard_interrupt
